      ! OpenMP Target Free Real Routines
      subroutine omp_target_free_f_R4P_1(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_1

      subroutine omp_target_free_f_R4P_2(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_2

      subroutine omp_target_free_f_R4P_3(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_3

      subroutine omp_target_free_f_R4P_4(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_4

      subroutine omp_target_free_f_R4P_5(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_5

      subroutine omp_target_free_f_R4P_6(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_6

      subroutine omp_target_free_f_R4P_7(fptr_dev, omp_dev)
         implicit none
         real(R4P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R4P_7

      subroutine omp_target_free_f_R8P_1(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_1

      subroutine omp_target_free_f_R8P_2(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_2

      subroutine omp_target_free_f_R8P_3(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_3

      subroutine omp_target_free_f_R8P_4(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_4

      subroutine omp_target_free_f_R8P_5(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_5

      subroutine omp_target_free_f_R8P_6(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_6

      subroutine omp_target_free_f_R8P_7(fptr_dev, omp_dev)
         implicit none
         real(R8P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R8P_7

      subroutine omp_target_free_f_R16P_1(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_1

      subroutine omp_target_free_f_R16P_2(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_2

      subroutine omp_target_free_f_R16P_3(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_3

      subroutine omp_target_free_f_R16P_4(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_4

      subroutine omp_target_free_f_R16P_5(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_5

      subroutine omp_target_free_f_R16P_6(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_6

      subroutine omp_target_free_f_R16P_7(fptr_dev, omp_dev)
         implicit none
         real(R16P), pointer, contiguous, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)

         include "src/lib/include/free_fptr_dev.i90"

      endsubroutine omp_target_free_f_R16P_7

      ! OpenMP Target Alloc Real Routines
      subroutine omp_target_alloc_f_R4P_1(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:)
         integer(I8P), intent(in)          :: dimensions

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(dimensions, c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions])

      endsubroutine omp_target_alloc_f_R4P_1

      subroutine omp_target_alloc_f_R4P_2(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:)
         integer(I8P), intent(in)          :: dimensions(2)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2)])

      endsubroutine omp_target_alloc_f_R4P_2

      subroutine omp_target_alloc_f_R4P_3(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:,:)
         integer(I8P), intent(in)          :: dimensions(3)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3)])

      endsubroutine omp_target_alloc_f_R4P_3

      subroutine omp_target_alloc_f_R4P_4(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(4)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4)])

      endsubroutine omp_target_alloc_f_R4P_4

      subroutine omp_target_alloc_f_R4P_5(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(5)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5)])

      endsubroutine omp_target_alloc_f_R4P_5

      subroutine omp_target_alloc_f_R4P_6(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(6)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6)])

      endsubroutine omp_target_alloc_f_R4P_6

      subroutine omp_target_alloc_f_R4P_7(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R4P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(7)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R4P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6), dimensions(7)])

      endsubroutine omp_target_alloc_f_R4P_7

      subroutine omp_target_alloc_f_R8P_1(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:)
         integer(I8P), intent(in)          :: dimensions

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(dimensions, c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions])

      endsubroutine omp_target_alloc_f_R8P_1

      subroutine omp_target_alloc_f_R8P_2(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:)
         integer(I8P), intent(in)          :: dimensions(2)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2)])

      endsubroutine omp_target_alloc_f_R8P_2

      subroutine omp_target_alloc_f_R8P_3(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:,:)
         integer(I8P), intent(in)          :: dimensions(3)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3)])

      endsubroutine omp_target_alloc_f_R8P_3

      subroutine omp_target_alloc_f_R8P_4(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(4)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4)])

      endsubroutine omp_target_alloc_f_R8P_4

      subroutine omp_target_alloc_f_R8P_5(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(5)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5)])

      endsubroutine omp_target_alloc_f_R8P_5

      subroutine omp_target_alloc_f_R8P_6(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(6)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6)])

      endsubroutine omp_target_alloc_f_R8P_6

      subroutine omp_target_alloc_f_R8P_7(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R8P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)
         integer(I8P), intent(in)          :: dimensions(7)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R8P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6), dimensions(7)])

      endsubroutine omp_target_alloc_f_R8P_7

      subroutine omp_target_alloc_f_R16P_1(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:)
         integer(I8P), intent(in)           :: dimensions

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(dimensions, c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions])

      endsubroutine omp_target_alloc_f_R16P_1

      subroutine omp_target_alloc_f_R16P_2(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:)
         integer(I8P), intent(in)           :: dimensions(2)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2)])

      endsubroutine omp_target_alloc_f_R16P_2

      subroutine omp_target_alloc_f_R16P_3(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:,:)
         integer(I8P), intent(in)           :: dimensions(3)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3)])

      endsubroutine omp_target_alloc_f_R16P_3

      subroutine omp_target_alloc_f_R16P_4(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:,:,:)
         integer(I8P), intent(in)           :: dimensions(4)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4)])

      endsubroutine omp_target_alloc_f_R16P_4

      subroutine omp_target_alloc_f_R16P_5(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:)
         integer(I8P), intent(in)           :: dimensions(5)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5)])

      endsubroutine omp_target_alloc_f_R16P_5

      subroutine omp_target_alloc_f_R16P_6(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:)
         integer(I8P), intent(in)           :: dimensions(6)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6)])

      endsubroutine omp_target_alloc_f_R16P_6

      subroutine omp_target_alloc_f_R16P_7(fptr_dev, dimensions, omp_dev)
         implicit none
         real(R16P), pointer, intent(inout) :: fptr_dev(:,:,:,:,:,:,:)
         integer(I8P), intent(in)           :: dimensions(7)

         include "src/lib/include/alloc_fptr_dev.i90"

         cptr_dev = omp_target_alloc_c(int(product(dimensions), c_size_t) * byte_size(1._R16P), omp_device)

         call c_f_pointer(cptr_dev, fptr_dev, [dimensions(1), dimensions(2), dimensions(3), dimensions(4), &
                                               dimensions(5), dimensions(6), dimensions(7)])

      endsubroutine omp_target_alloc_f_R16P_7

      ! OpenMP Target Memcpy Real Routines
      subroutine omp_target_memcpy_f_R4P_1(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_1

      subroutine omp_target_memcpy_f_R4P_2(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_2

      subroutine omp_target_memcpy_f_R4P_3(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_3

      subroutine omp_target_memcpy_f_R4P_4(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:,:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_4

      subroutine omp_target_memcpy_f_R4P_5(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_5

      subroutine omp_target_memcpy_f_R4P_6(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_6

      subroutine omp_target_memcpy_f_R4P_7(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R4P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:,:)
         real(R4P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R4P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R4P_7

      subroutine omp_target_memcpy_f_R8P_1(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_1

      subroutine omp_target_memcpy_f_R8P_2(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_2

      subroutine omp_target_memcpy_f_R8P_3(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_3

      subroutine omp_target_memcpy_f_R8P_4(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:,:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_4

      subroutine omp_target_memcpy_f_R8P_5(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_5

      subroutine omp_target_memcpy_f_R8P_6(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_6

      subroutine omp_target_memcpy_f_R8P_7(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R8P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:,:)
         real(R8P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R8P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R8P_7

      subroutine omp_target_memcpy_f_R16P_1(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_1

      subroutine omp_target_memcpy_f_R16P_2(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_2

      subroutine omp_target_memcpy_f_R16P_3(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_3

      subroutine omp_target_memcpy_f_R16P_4(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:,:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_4

      subroutine omp_target_memcpy_f_R16P_5(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_5

      subroutine omp_target_memcpy_f_R16P_6(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_6

      subroutine omp_target_memcpy_f_R16P_7(fptr_dst, fptr_src, ierr, dst_off, src_off, &
            omp_dst_dev, omp_src_dev)
         implicit none
         real(R16P), contiguous, intent(out) :: fptr_dst(:,:,:,:,:,:,:)
         real(R16P), contiguous, intent(in)  :: fptr_src(:,:,:,:,:,:,:)

         include "src/lib/include/memcpy.i90"

         total_dim = int(n_elements * byte_size(1._R16P), c_size_t)

         ierr = int(omp_target_memcpy_c(cptr_dst, cptr_src, total_dim, omp_dst_offset, omp_src_offset, &
            omp_dst_device, omp_src_device), I4P)

      endsubroutine omp_target_memcpy_f_R16P_7
